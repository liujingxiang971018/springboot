
Spring的缺点：
    Spring的组件代码是轻量级的，但是配置却是重量级的。Spring需要用XML配置
    这些配置都代表了开发时的损耗。
    项目的依赖管理是一件耗时耗力的事情。在环境搭建时，需要分析要导入哪些库的坐标。而且还需要分析导入与之有依赖关系的其他库的坐标。

SpringBoot的优点：
    基于Spring的开发提供更快的入门体验
    开箱即用，没有代码生成，也无需XML配置，同时可以修改默认值来满足特定的需求
    提供了一些大型项目中常见的非功能性特性：嵌入式服务器
    SpringBoot不是对Spring功能上的增强，而是提供一种快速使用的Spring方式

SpringBoot的核心功能：
    起步依赖
        本质上是一个Maven项目对象模型，定义了对其他库的传递依赖，这些东西加在一起即支持某项功能
    自动配置
        SpringBoot的自动配置是一个运行时的过程，考虑了众多因素，才决定Spring配置应该用哪个，不该用哪个。这是自动决定的

SpringBoot的热部署：
    <!--设置为热部署-->
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-devtools</artifactId>
    </dependency>

SpringBoot配置文件类型和作用
    SpringBoot是基于约定的， 所以很多配置都有默认值，
    但如果想使用自己的配置替换，就可以使用application.properties或者application.yml进行配置
    优先级：application.properties>application.yml

    application.yml配置文件：
        YML文件格式是一种只管的能够被电脑识别的数据序列化格式，并且容易被人阅读，比传统的xml方式更加简洁，类似json格式。



Git的使用：
    0.第一次使用git，需要先配置本地仓库的信息
        git config user.name "liujingxiang"
        git config user.email "liujingxiang971018@163.com"

    1.先到本地目标文件夹下打开git终端，初始化为本地仓库
        git init

    2.创建ssh秘钥
        ssh-keygen -t rsa   （然后一直enter）

    3.将本地工程加入本地仓库中，并设置本次提交及其注释
        git add .   （.表示所有文件）
        git commit -m "first commit"

        3.1.如果需要忽略一些文件，则需要新建一个.gitignore文件记录需要忽略的文件
            touch .gitignore
            echo ".idea/" >> .gitignore
            echo "out/" >> .gitignore
            echo "*.iml" >> .gitignore

        3.2.在本地修改后的文件再提交到本地仓库：
            git commit -am "second commit"

    4.将本地仓库中的文件push到远程仓库中：先连接，然后推送到指定分支上（ 默认master分支）
        git remote add origin git@github.com:liujingxiang971018/leetcode.git

        git branch -M main
        git push -u origin main

    5.从远程仓库克隆到本地仓库
        git clone git@github.com:liujingxiang971018/leetcode.git

        在远程仓库修改后的文件，拉取到本地：
        git pull -v --progress origin

    6.清楚缓存区中的所有文件
        git rm -r --cached .